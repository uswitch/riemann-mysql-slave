#!/usr/bin/env ruby

# Gathers mysql STATUS and submits them to Riemann.

require 'riemann/tools'

class Riemann::Tools::MysqlSlave
  require 'mysql2'
  include Riemann::Tools

  opt :mysql_host, "MySQL hostname", :default => 'localhost'
  opt :mysql_port, "MySQL port", :default => 3306
  opt :mysql_username, "MySQL username", :default => ''
  opt :mysql_password, "MySQL password", :default => ''

  def initialize
    options = { :host => opts[:mysql_host],
                :port => opts[:mysql_port],
                :username => opts[:mysql_username],
                :password => opts[:mysql_password],
                :reconnect => true }
    @mysql = ::Mysql2::Client.new(options)
  end

  def tick
    begin
      @mysql.query("SHOW SLAVE STATUS;").each do |var|
        data = {
          :host => opts[:mysql_host],
          :service => "mysql_slave Seconds_Behind_Master",
          :metric => var["Seconds_Behind_Master"],
          :tags => ["mysql"]
        }
        report(data)
      end
    end
  end

end

Riemann::Tools::MysqlSlave.run
